{
  "[animation]: Add rotate X animation.": {
    "prefix": "sseo-animation-rotateX",
    "body": ["@include animation-rotateX($$duration: ${second});"],
    "description": "[animation]: Add rotate X animation."
  },
  "[animation]: Add rotate Y animation.": {
    "prefix": "sseo-animation-rotateY",
    "body": ["@include animation-rotateY($$duration: ${second});"],
    "description": "[animation]: Add rotate Y animation."
  },
  "[animation]: Add scale animation (mini zoom effect).": {
    "prefix": "sseo-animation-scale",
    "body": ["@include animation-scale($$scaleValue: ${1:foat->0.5~1.5});"],
    "description": "[animation]: Add scale animation (mini zoom effect)."
  },
  "[animation]: Add a slide animation effect - great for a sidebar.": {
    "prefix": "sseo-animation-slide",
    "body": [
      "@include animation-slide($$in-out: ${1:in, out}, $$direction: ${2:up, down, right, left});"
    ],
    "description": "[animation]: Add a slide animation effect - great for a sidebar."
  },
  "[animation]: Add Slide Animation Effect (Fluid).": {
    "prefix": "sseo-animation-fade",
    "body": ["@include animation-fade($$in-out: ${1:in, out});"],
    "description": "[animation]: Add Slide Animation Effect (Fluid)."
  },
  "[animation]: Add a temporary zoom animation effect - often used for an animation effect on entry.": {
    "prefix": "sseo-animation-zoom",
    "body": ["@include animation-zoom($$in-out: ${1:in, out});"],
    "description": "[animation]: Add a temporary zoom animation effect - often used for an animation effect on entry."
  },
  "[animation]: Add flip animation effect.": {
    "prefix": "sseo-animation-flip",
    "body": ["@include animation-flip($$in-out: ${1:in, out});"],
    "description": "[animation]: Add flip animation effect."
  },
  "[animation]: Add rotation animation effect.": {
    "prefix": "sseo-animation-rotate",
    "body": [
      "@include animation-rotate($$in-out: ${1:in, out}, $$yax: ${2:up, down}, $$xax: ${3:left, right});"
    ],
    "description": "[animation]: Add rotation animation effect."
  },
  "[animation]: Add notification animation effect.": {
    "prefix": "sseo-animation-notif",
    "body": ["@include animation-notif($$in-out: ${1:in, out});"],
    "description": "[animation]: Add notification animation effect."
  },
  "[animation]: Add pulse animation effect.": {
    "prefix": "sseo-animation-pulse",
    "body": ["@include animation-pulse();"],
    "description": "[animation]: Add pulse animation effect."
  },
  "[animation]: Add bounce animation effect.": {
    "prefix": "sseo-animation-bounce",
    "body": ["@include animation-bounce();"],
    "description": "[animation]: Add bounce animation effect."
  },
  "[animation]: Add flash animation effect.": {
    "prefix": "sseo-animation-flash",
    "body": ["@include animation-flash();"],
    "description": "[animation]: Add flash animation effect."
  },
  "[box]: Box-circle mixin helps you easily create perfect circle shapes.": {
    "prefix": "sseo-box-circle",
    "body": ["@include box-circle($$size: ${1:pixel});"],
    "description": "[box]: Box-circle mixin helps you easily create perfect circle shapes."
  },
  "[box]: The Box-radius mixin helps you round the corner(s) of a selected element using the CSS border-radius property. You can pass a value (along with the unit) to style all the corners of the same way or you can use the CSS shorthand property to style each corner differently - the benefit of using this mixin is that each value as you type is transformed into REM giving a more responsive styling effect.": {
    "prefix": "sseo-box-radius",
    "body": [
      "@include box-radius(${1:null, top, top-right, right, bottom-right, bottom, botton-left, left, top-left, cross-left, cross-right, all}, ${2:pixel});"
    ],
    "description": "[box]: The Box-radius mixin helps you round the corner(s) of a selected element using the CSS border-radius property. You can pass a value (along with the unit) to style all the corners of the same way or you can use the CSS shorthand property to style each corner differently - the benefit of using this mixin is that each value as you type is transformed into REM giving a more responsive styling effect."
  },
  "[box]: Box-sizing mixin sets the value of the CSS box-sizing property to border-box for the selected HTML elements. So the padding and border will be inside the selected element.": {
    "prefix": "sseo-box-sizing",
    "body": ["@include box-sizing($$value: ${1:null, only});"],
    "description": "[box]: Box-sizing mixin sets the value of the CSS box-sizing property to border-box for the selected HTML elements. So the padding and border will be inside the selected element."
  },
  "[box]: Quickly add a border on containers (useful for debugging).": {
    "prefix": "sseo-box-debugging",
    "body": [
      "@include box-debugging($$colors: ${1:color->red}, $$size: ${2:pixel->3px}, $$bg-color: ${3:boolean->false} , $$status: ${4:boolean->true});"
    ],
    "description": "[box]: Quickly add a border on containers (useful for debugging)."
  },
  "[palette]: Preset color palette.": {
    "prefix": "sseo-palette-gray",
    "body": [
      "$$clouds: #ecf0f1;",
      "$$silver: #bdc3c7;",
      "$$concrete: #95a5a6;",
      "$$asbestos: #7f8c8d;"
    ],
    "description": "[palette]: Preset color palette."
  },
  "[color]: A function that returns the color pastel as an argument.": {
    "prefix": "sseo-func-color-pastel",
    "body": ["__color-pastel($$colors: ${1:color});"],
    "description": "[color]: A function that returns the color pastel as an argument."
  },
  "[color]: A function that adjusts the brightness of an argument color.": {
    "prefix": "sseo-func-color-adjust",
    "body": ["__color-adjust($$colors: ${1:color}, $$percent: ${2:percent});"],
    "description": "[color]: A function that adjusts the brightness of an argument color."
  },
  "[color]: A function that returns the complement of a color (used to determine a graphic charter).": {
    "prefix": "sseo-func-color-complement",
    "body": ["__color-complement($$colors: ${1:color});"],
    "description": "[color]: A function that returns the complement of a color (used to determine a graphic charter)."
  },
  "[docs]: Allows you to quickly write the codes needed to generate a docs by sassdoc.": {
    "prefix": "sseo-docs*4",
    "body": [
      "/// ${1:status}",
      "/// ${2:description}",
      "/// @param {${3:type}} $${4:arg} [${5:default}] - ${6:description}",
      "/// @param {${7:type}} $${8:arg} [${9:default}] - ${10:description}",
      "/// @param {${11:type}} $${12:arg} [${13:default}] - ${14:description}",
      "/// @param {${15:type}} $${16:arg} [${17:default}] - ${18:description}",
      "/// @example",
      "/// /* example 1 */",
      "///",
      "///",
      "/// /* example 2 */",
      "///",
      "///",
      "/// /* example 3 */",
      "///"
    ],
    "description": "[docs]: Allows you to quickly write the codes needed to generate a docs by sassdoc."
  },
  "[effect]: Mixin Effect-gradient-text (also known as CSS Gradient Text) helps you add a gradient overlay to a text element. Provides a one-line method to very easily set the angle of direction of the gradient line, the values ​​of coow and the positions of the color stops.": {
    "prefix": "sseo-effect-gradient-text",
    "body": [
      "@include effect-gradient-text($$direction: ${1:top, top-right, right, bottom-right, bottom, bottom-left, left, top-left}, $$colors: ${2: color});"
    ],
    "description": "[effect]: Mixin Effect-gradient-text (also known as CSS Gradient Text) helps you add a gradient overlay to a text element. Provides a one-line method to very easily set the angle of direction of the gradient line, the values ​​of coow and the positions of the color stops."
  },
  "[effect]: The Effect-gradient-radial mixin helps you generate beautiful radial CSS gradients. It uses the radial-gradient CSS property.": {
    "prefix": "sseo-effect-gradient-radial",
    "body": [
      "@include effect-grandient-radial($$shape: ${1:null, circle, ellipse}, $$position: ${2:top, top-right, right, bottom-right, bottom, bottom-left, left, top-left, center, closest-side, farthest-side, closest-corner, farthest-corner}, $$colors: ${3:color});"
    ],
    "description": "[effect]: The Effect-gradient-radial mixin helps you generate beautiful radial CSS gradients. It uses the radial-gradient CSS property."
  },
  "[effect]: The Effect-gradient-linear mixin helps you generate colorful CSS gradients and combines them with image and text elements. This way you can create beautiful page components.": {
    "prefix": "sseo-effect-gradient-linear",
    "body": [
      "@include effect-grandient-linear($$direction: ${1:top, top-right, right, bottom-right, bottom, bottom-left, left, top-left}, $$colors: ${2: colorlist});"
    ],
    "description": "[effect]: The Effect-gradient-linear mixin helps you generate colorful CSS gradients and combines them with image and text elements. This way you can create beautiful page components."
  },
  "[effect]: The effect-text-image mixin helps you clip the background image of a selected element to the shape of its foreground text.": {
    "prefix": "sseo-effect-text-image",
    "body": ["@include effect-text-image($$image: ${1:url});"],
    "description": "[effect]: The effect-text-image mixin helps you clip the background image of a selected element to the shape of its foreground text."
  },
  "[effect]: Simply call the effect-hide mixin to visually hide the selected element and all of its children (but accessible to screen readers).": {
    "prefix": "sseo-effect-hide",
    "body": ["@include effect-hide($$toggle: ${1:hide, unhide)};"],
    "description": "[effect]: Simply call the effect-hide mixin to visually hide the selected element and all of its children (but accessible to screen readers)."
  },
  "[effect]: Add an opacity effect on an element (compatible with IE8).": {
    "prefix": "sseo-effect-opacity",
    "body": ["@include effect-opacity($$percent: ${1:percent});"],
    "description": "[effect]: Add an opacity effect on an element (compatible with IE8)."
  },
  "[effect]: Add an outer shadow effect on a container.": {
    "prefix": "sseo-effect-box-shadow",
    "body": [
      "@include effect-box-shadow($$opacity: ${1:solid, small, medium, large, smooth, none});"
    ],
    "description": "[effect]: Add an outer shadow effect on a container."
  },
  "[effect]: Add an interior shadow effect on a container.": {
    "prefix": "sseo-effect-box-shadow-inset",
    "body": [
      "@include effect-box-shadow-inset($$opacity: ${1:small, medium, large, none});"
    ],
    "description": "[effect]: Add an interior shadow effect on a container."
  },
  "[effect]: Add an inner shadow effect on text.": {
    "prefix": "sseo-effect-text-shadow",
    "body": [
      "@include effect-text-shadow($$opacity: ${1:small, medium, large, none}, $$colors: ${2:color->#222});"
    ],
    "description": "[effect]: Add an inner shadow effect on text."
  },
  "[effect]: The effect-text-supershadow mixin helps you add shadow to text elements. Accepts a comma-separated list of shadows or a single shadow value that can optionally be multiplied. It provides an easy-to-use one-line method - unlike th'effect-text-shadow' mixin, this one is more customizable and more powerful in terms of functionality.": {
    "prefix": "sseo-effect-text-supershadow",
    "body": [
      "@include effect-text-supershadow($$direction: ${1:top, top-right, right, bottom-right, bottom, bottom-left, left, top-left}, $$colors: ${2: color->rgba(black, 0.3)}, $$size: ${3:pixel}, $$blur: ${4:pixel->null}, $$fill: ${5:boolean->false}) ;"
    ],
    "description": "[effect]: The effect-text-supershadow mixin helps you add shadow to text elements. Accepts a comma-separated list of shadows or a single shadow value that can optionally be multiplied. It provides an easy-to-use one-line method - unlike th'effect-text-shadow' mixin, this one is more customizable and more powerful in terms of functionality."
  },
  "[effect]: The effect-text-stroke mixin helps you add a stroke to a text element and style it very easily.": {
    "prefix": "sseo-effect-text-stroke",
    "body": [
      "@include effect-text-stroke($$colors: ${1:color->transparent}, $$stroke-color: ${2:color->black}, $$fallback-color: ${3:color ->black}, $$stroke-width: ${4:thin, medium, thick | pixel});"
    ],
    "description": "[effect]: The effect-text-stroke mixin helps you add a stroke to a text element and style it very easily."
  },
  "[effect]: Add external glow (light effect) to text.": {
    "prefix": "sseo-effect-text-light",
    "body": [
      "@include effect-text-light($$opacity: ${1:small, medium, large, none}, $$colors: ${2:color->#eee});"
    ],
    "description": "[effect]: Add external glow (light effect) to text."
  },
  "[effect]: Add an external glow (light effect) to a container.": {
    "prefix": "sseo-effect-box-light",
    "body": [
      "@include effect-box-light($$opacity: ${1:solid, small, medium, large, none}, $$colors: ${2:color->#eee});"
    ],
    "description": "[effect]: Add an external glow (light effect) to a container."
  },
  "[image]: Image-logo mixin helps you create an SEO-optimized logo component for your brand's website using CSS best practices.": {
    "prefix": "sseo-image-logo",
    "body": [
      "@include image-logo($$image: ${1:url}, $$width: ${2:pixel}, $$height: ${3:pixel});"
    ],
    "description": "[image]: Image-logo mixin helps you create an SEO-optimized logo component for your brand's website using CSS best practices."
  },
  "[image]: Image-background mixin lets you apply background images to selected items.": {
    "prefix": "sseo-image-background",
    "body": [
      "@include image-background($$image: ${1:url}, $$filter-color: ${2:color list}, $$filter-direction: ${3:top, top-right, right, bottom-right, bottom, bottom-left, left, top-left});"
    ],
    "description": "[image]: Image-background mixin lets you apply background images to selected items."
  },
  "[image]: Add high-res images to your site, with a workaround for devices that don't display high-res images when using Retina Image, it's best to compress to the max without destroying image source (https://tinypng.com).": {
    "prefix": "sseo-image-retina",
    "body": [
      "@include image-retina($$image: ${1:url}, $$width: ${2:pixel}, $$height: ${3:pixel});"
    ],
    "description": "[image]: Add high-res images to your site, with a workaround for devices that don't display high-res images when using Retina Image, it's best to compress to the max without destroying image source (https://tinypng.com)."
  },
  "[image]: The image-resolution mixin helps you target elements to different screen resolutions.": {
    "prefix": "sseo-image-resolution",
    "body": ["@include image-resolution($$resolution: ${1:x1, x2, x3});"],
    "description": "[image]: The image-resolution mixin helps you target elements to different screen resolutions."
  },
  "[image]: The image-responsive mixin helps you make images responsive and change the default display CSS property value from inline to block to remove the extra space below.": {
    "prefix": "sseo-image-responsive",
    "body": ["@include image-responsive($$height: ${1:pixel->auto});"],
    "description": "[image]: The image-responsive mixin helps you make images responsive and change the default display CSS property value from inline to block to remove the extra space below."
  },
  "[import]: Import basics sass-eo module": {
    "prefix": "sseo-import-basics",
    "body": ["@import 'sass-eo-basics';"],
    "description": "[import]: Import basics sass-eo module"
  },
  "[import]: Import milligrid (flexbox) module from sass-eo": {
    "prefix": "sseo-import-milligrid",
    "body": ["@import 'sass-eo-milligrid';"],
    "description": "[import]: Import milligrid (flexbox) module from sass-eo"
  },
  "[import]: Import semantic-ui (min) module from sass-eo": {
    "prefix": "sseo-import-semantic",
    "body": ["@import 'sass-eo-semantic';"],
    "description": "[import]: Import semantic-ui (min) module from sass-eo"
  },
  "[import]: Import bootstrap module (min) from sass-eo": {
    "prefix": "sseo-import-bt",
    "body": ["@import 'sass-eo-bootstrap';"],
    "description": "[import]: Import bootstrap module (min) from sass-eo"
  },
  "[import]: Import bootstrap (grid) module from sass-eo": {
    "prefix": "sseo-import-bt-grid",
    "body": ["@import 'sass-eo-bootstrap-grid';"],
    "description": "[import]: Import bootstrap (grid) module from sass-eo"
  },
  "[import]: Import bootstrap module (utils) from sass-eo": {
    "prefix": "sseo-import-bt-utils",
    "body": ["@import 'sass-eo-bootstrap-utils';"],
    "description": "[import]: Import bootstrap module (utils) from sass-eo"
  },
  "[input]: The input-placeholder mixin will help you style placeholder text in an 'input' or 'textarea' element and generate cross-browser compatible CSS.": {
    "prefix": "sseo-input-placeholder",
    "body": ["@include input-placeholder();"],
    "description": "[input]: The input-placeholder mixin will help you style placeholder text in an 'input' or 'textarea' element and generate cross-browser compatible CSS."
  },
  "[input]: The input-placeholder-shown mixin helps you style the 'input' or 'textarea' element that currently displays the placeholder text. As soon as the placeholder text disappears (it's i.e. when the user starts typing), the applied style rules also disappear.": {
    "prefix": "sseo-input-placeholder-shown",
    "body": ["@include input-placeholder-shown();"],
    "description": "[input]: The input-placeholder-shown mixin helps you style the 'input' or 'textarea' element that currently displays the placeholder text. As soon as the placeholder text disappears (it's i.e. when the user starts typing), the applied style rules also disappear."
  },
  "[input]: Input-all mixin helps you target all text-based HTML input elements in the DOM, so you can easily apply your style rules.": {
    "prefix": "sseo-input-all",
    "body": [
      "@include input-all($$nickname: ${1:null, hover, focus, active, invalid, required, disabled});"
    ],
    "description": "[input]: Input-all mixin helps you target all text-based HTML input elements in the DOM, so you can easily apply your style rules."
  },
  "[input]: Input-style-scale adds zoom effect style for input.": {
    "prefix": "sseo-input-style-scale",
    "body": [
      "@include input-style-scale($$bg-color: ${1:color->#eee}, $$border-color: ${2:color->#eee}, $$text-color: $ {3:#444});"
    ],
    "description": "[input]: Input-style-scale adds zoom effect style for input."
  },
  "[layout]: This mixin will be useful whenever you have content floating to the right or left and want to clear the space below the floating element to insert new content below - must be applied to the element parent.": {
    "prefix": "sseo-layout-clearfix",
    "body": ["@include clearfix();"],
    "description": "[layout]: This mixin will be useful whenever you have content floating to the right or left and want to clear the space below the floating element to insert new content below - must be applied to the element parent."
  },
  "[layout]: Columnize mixin helps you create hypothetical evenly divided columns (based on flexbox) in a containing element, as much as the value you pass for the $columns argument. So you can display all children at the same time. 'inside parent element as if aligned in a column - [WARNING]: must be applied to parent element to align children inside of it!.": {
    "prefix": "sseo-layout-columnize",
    "body": [
      "@include columnize(${1:$$columns: number}, ${2:$$gutter: :pixel}, ${3:$$fill: boolean->false});"
    ],
    "description": "[layout]: Columnize mixin helps you create hypothetical evenly divided columns (based on flexbox) in a containing element, as much as the value you pass for the $columns argument. So you can display all children at the same time. 'inside parent element as if aligned in a column - [WARNING]: must be applied to parent element to align children inside of it!."
  },
  "[lib]: Import hamburgers module (lib) from sass-eo": {
    "prefix": "sseo-import-lib-burgers",
    "body": ["@import 'sass-eo-lib-burgers';"],
    "description": "[lib]: Import hamburgers module (lib) from sass-eo"
  },
  "[lib]: Import magic module (lib) from sass-eo": {
    "prefix": "sseo-import-lib-magic",
    "body": ["@import 'sass-eo-lib-magic';"],
    "description": "[lib]: Import magic module (lib) from sass-eo"
  },
  "[lib]: Mixin loaders from sass-eo": {
    "prefix": "sseo-lib-loaders*2 [1-2-3-6-9-12]",
    "body": [
      "@include loader-${1:index}($$primary: ${2:color}, $$secondary: ${3:color});"
    ],
    "description": "[lib]: Mixin loaders from sass-eo"
  },
  "[lib]: Import module loaders (lib) from sass-eo": {
    "prefix": "sseo-import-lib-loaders",
    "body": ["@import 'sass-eo-lib-loaders';"],
    "description": "[lib]: Import module loaders (lib) from sass-eo"
  },
  "[lib]: Mixin magic (animation) from sass-eo": {
    "prefix": "sseo-lib-magic-spaceInLeft",
    "body": ["@include magic-spaceInLeft($$duration: ${1: second});"],
    "description": "[lib]: Mixin magic (animation) from sass-eo"
  },
  "[media]: Breakpoint mixin helps you create scalable media queries and breakpoints using @media CSS rule in SCSS.": {
    "prefix": "sseo-media-breakpoint",
    "body": [
      "@include breakpoint(${1:$$mode: only, min, max, beetween}, ${2:$$value: xsmall, small, medium, large, xlarge | pixel});"
    ],
    "description": "[media]: Breakpoint mixin helps you create scalable media queries and breakpoints using @media CSS rule in SCSS."
  },
  "[media]: Breakpointer mixin is a handy little tool that shows what breakpoint you're at so you can write your styles for that specific screen size.": {
    "prefix": "sseo-media-breakpointer",
    "body": ["@include breakpointer($$selector: ${1:id, class, tag});"],
    "description": "[media]: Breakpointer mixin is a handy little tool that shows what breakpoint you're at so you can write your styles for that specific screen size."
  },
  "[position]: Position-set mixin provides a one-line method to quickly set both the position and offset properties of a selected element.": {
    "prefix": "sseo-position-set",
    "body": [
      "@include position-set($$position: ${1:static, relative, fixed, absoluteute, sticky}, ${2:$$offsets: list(top, right, bottom, left)->0});"
    ],
    "description": "[position]: Position-set mixin provides a one-line method to quickly set both the position and offset properties of a selected element."
  },
  "[position]: Position-center mixin allows you to center elements (elements that have an absolute or fixed position value) on the horizontal and vertical axes - [WARNING]: You must declare position-style rule: absolute or position: fixed to the selected element for this mixin to work correctly. The position value of the parent element, in which you will center, must be something other than static.": {
    "prefix": "sseo-position-center",
    "body": [
      "@include position-center($$axis: ${1:vertical, horizontal, both});"
    ],
    "description": "[position]: Position-center mixin allows you to center elements (elements that have an absolute or fixed position value) on the horizontal and vertical axes - [WARNING]: You must declare position-style rule: absolute or position: fixed to the selected element for this mixin to work correctly. The position value of the parent element, in which you will center, must be something other than static."
  },
  "[position]: Quickly center a block.": {
    "prefix": "sseo-position-block-center",
    "body": ["@include position-block-center();"],
    "description": "[position]: Quickly center a block."
  },
  "[position]: Quickly center child element.": {
    "prefix": "sseo-position-flex-center",
    "body": ["@include position-flex-center();"],
    "description": "[position]: Quickly center child element."
  },
  "[spacing]: Quickly change an item's padding.": {
    "prefix": "sseo-spacing-padding",
    "body": [
      "@include spacing-padding($$top: ${1:pixel}, $$right: ${2:pixel}, $$bottom: ${3:pixel}, $$left: ${4:pixel});"
    ],
    "description": "[spacing]: Quickly change an item's padding."
  },
  "[spacing]: Quickly change an element's margin.": {
    "prefix": "sseo-spacing-margin",
    "body": [
      "@include spacing-margin($$top: ${1:pixel}, $$right: ${2:pixel}, $$bottom: ${3:pixel}, $$left: ${4:pixel});"
    ],
    "description": "[spacing]: Quickly change an element's margin."
  },
  "[spacing]: Quickly add predefined padding based on template argument.": {
    "prefix": "sseo-spacing-padding-template",
    "body": [
      "@include spacing-padding-gabarit($$gabarit: ${1:xx-small, x-small, smaller, small, medium, large, larger, x-large, xx-large});"
    ],
    "description": "[spacing]: Quickly add predefined padding based on template argument."
  },
  "[spacing]: Quickly add a predefined margin based on the template argument.": {
    "prefix": "sseo-spacing-margin-template",
    "body": [
      "@include spacing-margin-gabarit($$gabarit: ${1:xx-small, x-small, smaller, small, medium, large, larger, x-large, xx-large});"
    ],
    "description": "[spacing]: Quickly add a predefined margin based on the template argument."
  },
  "[spacing]: Quickly add a predefined padding|margin based on the template argument.": {
    "prefix": "sseo-spacing-all-template",
    "body": [
      "@include spacing-all-gabarit($$gabarit: ${1:xx-small, x-small, smaller, small, medium, large, larger, x-large, xx-large});"
    ],
    "description": "[spacing]: Quickly add a predefined padding|margin based on the template argument."
  },
  "The resizable mixin helps you make an element resizable in the horizontal or vertical directions.": {
    "prefix": "sseo-specs-resizable",
    "body": [
      "@include resizable($$direction: ${1:none, both, vertical, horizontal}, $$overflow: ${2:auto, overflow});"
    ],
    "description": "The resizable mixin helps you make an element resizable in the horizontal or vertical directions."
  },
  "Sizer mixin helps you size items with a statement (or two). Resize items or create square or rectangular shapes very easily.": {
    "prefix": "sseo-specs-sizer",
    "body": ["@include sizer($$width: ${1:pixel}, $$height: ${2:pixel});"],
    "description": "Sizer mixin helps you size items with a statement (or two). Resize items or create square or rectangular shapes very easily."
  },
  "There will be times when you need to style elements only for a particular tablet model. Tablet mixin helps you achieve this.": {
    "prefix": "sseo-specs-tablet",
    "body": [
      "@include tablet($$device: ${1:xx-small, iPadMini, iPad, iPadAir, iPadPro, Nexus7, Nexus9, Nexus10}, $$orientation: ${2: portrait, landscape});"
    ],
    "description": "There will be times when you need to style elements only for a particular tablet model. Tablet mixin helps you achieve this."
  },
  "Normalize allows browsers to render all elements more consistently and in line with modern standards - call once.": {
    "prefix": "sseo-specs-normalize",
    "body": ["@include normalize();"],
    "description": "Normalize allows browsers to render all elements more consistently and in line with modern standards - call once."
  },
  "Only mixin helps you filter out matching elements based on their position among a group of siblings and apply your style rules only to those elements. This mixin uses CSS pseudo-classes :first- of-type, :last-of-type and :nth-of-type (inverse of 'except' mixin).": {
    "prefix": "sseo-specs-only",
    "body": [
      "@include only($$arg: ${1:selector(id, class), first, last, odd, even | number(-n, n)});"
    ],
    "description": "Only mixin helps you filter out matching elements based on their position among a group of siblings and apply your style rules only to those elements. This mixin uses CSS pseudo-classes :first- of-type, :last-of-type and :nth-of-type (inverse of 'except' mixin)."
  },
  "Loadify mixin is a handy tool that can help you load page element with crossfade effect during page load.": {
    "prefix": "sseo-specs-loadify",
    "body": [
      "@include loadify($$mode: ${1:init}, $$delay: ${2:second->0.2s}, $$duration: ${3:second->0.5s});"
    ],
    "description": "Loadify mixin is a handy tool that can help you load page element with crossfade effect during page load."
  },
  "The minireset is a technique that consists of resetting the value of certain HTML elements to 0 in order to avoid certain differences.": {
    "prefix": "sseo-specs-minireset",
    "body": ["@include minireset();"],
    "description": "The minireset is a technique that consists of resetting the value of certain HTML elements to 0 in order to avoid certain differences."
  },
  "There will be times when you need to style elements only for a particular smartphone model. mobile mixin helps you achieve this.": {
    "prefix": "sseo-specs-mobile",
    "body": [
      "@include mobile($$device: ${1:iPhone4, iPhone-SE, iPhone5-SE, iPhone6, iPhone6-Plus, iPhone7, iPhone7-Plus, iPhone8, iPhone8-Plus, iPhone11, iPhone11-Pro, iPhone11-Pro -Max, iPhoneX, Galaxy-S7, Galaxy-S8, Galaxy-S8-Plus, Galaxy-S10",
      "}, ${2:$$orientation: portrait, landscape});"
    ],
    "description": "There will be times when you need to style elements only for a particular smartphone model. mobile mixin helps you achieve this."
  },
  "Except mixin helps you target items to which you don't want to apply the style changes you want for other items in the list (opposite of 'only' mixin).": {
    "prefix": "sseo-specs-except",
    "body": [
      "@include except($$arg: ${1:selector(id, class), first, last, odd, even | number(-n, n)});"
    ],
    "description": "Except mixin helps you target items to which you don't want to apply the style changes you want for other items in the list (opposite of 'only' mixin)."
  },
  "The Antialias mixin provides smooth font rendering, which means smoothing the font at the pixel level and preventing sub-pixel rendering.": {
    "prefix": "sseo-specs-antialias",
    "body": ["@include antialias($$value: ${1:null, only});"],
    "description": "The Antialias mixin provides smooth font rendering, which means smoothing the font at the pixel level and preventing sub-pixel rendering."
  },
  "The adaptive mixin helps you set the max-width value for containing elements based on the breakpoint values ​​defined in the _map-for-breakpoints.scss file, and also specifies a $gutter value, where the edges of a browser screen can most closely match the edges of the selected element. (Hint: the adaptive mixin works best with percentage values.).": {
    "prefix": "sseo-specs-adaptive",
    "body": ["@include adaptive($$gutter: ${1:pixel->30px});"],
    "description": "The adaptive mixin helps you set the max-width value for containing elements based on the breakpoint values ​​defined in the _map-for-breakpoints.scss file, and also specifies a $gutter value, where the edges of a browser screen can most closely match the edges of the selected element. (Hint: the adaptive mixin works best with percentage values.)."
  },
  "A function that converts a pixel value to rem.": {
    "prefix": "sseo-specs-convertToRem",
    "body": ["__convertToRem($$value: ${1:pixel});"],
    "description": "A function that converts a pixel value to rem."
  },
  "Add badge with animated linear gradient": {
    "prefix": "sseo-specs-badgeLinear",
    "body": [
      "@include badge-linear($$type: \"${1:gold, silver}\", $$height: ${2:pixel->4px}, $$width: ${3:pixel->10px }, $$gradient-speed: ${4:second->3s}, $$gradient-direction: ${5:normal, reverse->normal}, $$gradient-orientation: ${6:60deg, 90deg- >60deg}, $$border-radius: ${7:pixel->10px}, $$border: ${8:boolean->false}, $$font-size: ${9:pixel->12px}, $$font-color: ${10:color->#444, #eee->#444}, $$font-weight: ${12:bolder, normal, lighter->bolder});"
    ],
    "description": "Add badge with animated linear gradient"
  },
  "Customize your webpage's scrollbar.": {
    "prefix": "sseo-specs-barScrolling",
    "body": [
      "@include bar-scrolling($$bar-color: ${1:color}, $$bar-color-hover: ${2:color}, $$bg-color: ${3:color->#eee });"
    ],
    "description": "Customize your webpage's scrollbar."
  },
  "Button-all mixin helps you target all HTML button elements in the DOM so you can easily apply your style rules.": {
    "prefix": "sseo-specs-buttonAll",
    "body": [
      "@include button-all($$nickname: ${1:hover, focus, active, disabled});"
    ],
    "description": "Button-all mixin helps you target all HTML button elements in the DOM so you can easily apply your style rules."
  },
  "This mixin performs fast import of external fonts and includes consistent properties.": {
    "prefix": "sseo-specs-typoFontFace",
    "body": [
      "@include typo-fontface($$font-name: ${1:string}, $$path: ${2:url}, $$weight: ${3:normal, lighter, bold, bolder",
      "}, $$style: ${4:normal, italic});"
    ],
    "description": "This mixin performs fast import of external fonts and includes consistent properties."
  },
  "The responsive video mixin helps you create responsive containing elements with a fixed aspect ratio that you define. This is especially useful when embedding videos from YouTube or similar sources.": {
    "prefix": "sseo-specs-videoResponsive",
    "body": ["@include video-responsive($$ratio: ${1:16/9, 4/3});"],
    "description": "The responsive video mixin helps you create responsive containing elements with a fixed aspect ratio that you define. This is especially useful when embedding videos from YouTube or similar sources."
  },
  "[tools]: Generate image from internet using link": {
    "prefix": "sseo-tools-randomPic",
    "body": ["https://picsum.photos/500/300?random=1"],
    "description": "[tools]: Generate image from internet using link"
  }
}
