@charset "UTF-8";

$turquoise: #1abc9c;
$green-sea: #16a085;
$emerald: #2ecc71;
$nephritis: #27ae60;
$peter-river: #3498db;
$belize-hole: #2980b9;
$amethyst: #9b59b6;
$wisteria: #8e44ad;
$wet-asphalt: #34495e;
$midnight-blue: #2c3e50;
$sun-flower: #f1c40f;
$orange: #f39c12;
$carrot: #e67e22;
$pumpkin: #d35400;
$alizarin: #e74c3c;
$pomegranate: #c0392b;
$clouds: #ecf0f1;
$silver: #bdc3c7;
$concrete: #95a5a6;
$asbestos: #7f8c8d;

//TODO: verified
/// Une fonction qui retourne la pastel de la couleur en argument
/// @param {string} $color - la couleur a determiner sa valeur en pastel
@function color-pastel($color) {
	$hue: hue($color);
	$sat: 100%;
	$light: 90%;
	$pastel: hsl($hue, $sat, $light);

	@return $pastel;
}

//TODO: verified
/// Une fonction qui ajuste la luminosite d'une couleur en argument
/// @param {string} $color - la couleur a ajuster
@function color-adjust($color, $percent) {
	$adjust: lighten(adjust-hue($color, 20), $percent);

	@return $adjust;
}

//TODO: verified
/// Une fonction qui retourne le complementaire d'une couleur (utile pour determiner une charte graphique)
/// @param {string} $color - la couleur a determiner son complaimentaire
@function color-complement($color, $color-primary: $color) {
	@if (hue($color) >= 135 and hue($color) < 180) {
		$color: complement($color-primary);
	} @else {
		$color: adjust-hue($color, -60);
	}
	@return $color;
}
