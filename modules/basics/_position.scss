@charset "UTF-8";

//TODO: verified
/// Position-set mixin allows you to center elements (the elements that have position value either absolute or fixed) on both the horizontal and vertical axes - [WARNING]: You must declare either position: absolute or position: fixed style rule to the selected element to make this mixin work correctly. The parent element’s position value, which you’ll be centering within must be other than static.
/// @param {string} $axis [vertical, horizontal, both] - sets the axis of the alingment (element position)
/// @example
///  /* example 1 - both */
///
///  .parent-element {
///  	position: relative;
///  	.element {
///  		position: absolute;
///  		/* (top: 50%, left: 50%) */
///  		@include position-set(both);
///  	}
///  }
///
///  /* example 2 - horizontal */
///
///  .parent-element {
///  	position: relative;
///  	.element {
///  		position: absolute;
///  		/* (left: 50%) */
///  		@include center(horizontal);
///  	}
///  }
///
///  /* example 3 - vertical */
///
///  .parent-element {
///  	position: relative;
///  	.element {
///  		position: absolute;
///  		/* (top: 50%) */
///  		@include center(vertical);
///  	}
///  }
@mixin position-set($axis: 'both') {
	@if $axis == 'both' or $axis == 'vertical' {
		top: 50%;
	}
	@if $axis == 'both' or $axis == 'horizontal' {
		left: 50%;
	}
	transform: if(
			$axis == 'horizontal',
			translateX(-50%),
			if($axis == 'both', translateX(-50%), null)
		)
		if(
			$axis == 'vertical',
			translateY(-50%),
			if($axis == 'both', translateY(-50%), null)
		);
	@if not($axis == 'both' or $axis == 'vertical' or $axis == 'horizontal') {
		@error "The argument must be `vertical` or `horizontal` or `both`";
	}
}

//TODO: verified
/// Quickly center a block
/// @example
///  .containing-element {
///	  @include position-block-center();
///  }
@mixin position-block-center {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

//TODO: verified
/// Quickly center child item
/// @example
///  .containing-element {
///	  @include position-flex-center();
///  }
@mixin position-flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}
