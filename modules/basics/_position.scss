@charset "UTF-8";

//TODO: verified
/// Quickly position your elements relative to its parent element
/// @param {string} $position [vertical, horizontal, both] - element position
/// @example
///  .containing-element {
///	  @include position-set(both);
///  }
@mixin position-set($position) {
	position: relative;

	@if $position == 'vertical' {
		top: 50%;
		-webkit-transform: translateY(-50%);
		-ms-transform: translateY(-50%);
		transform: translateY(-50%);
	} @else if $position == 'horizontal' {
		left: 50%;
		-webkit-transform: translateX(-50%);
		-ms-transform: translateX(-50%);
		transform: translate(-50%);
	} @else if $position == 'both' {
		top: 50%;
		left: 50%;
		-webkit-transform: translate(-50%, -50%);
		-ms-transform: translate(-50%, -50%);
		transform: translate(-50%, -50%);
	}
}

//TODO: verified
/// Quickly center a block
/// @example
///  .containing-element {
///	  @include position-block-center();
///  }
@mixin position-block-center {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

//TODO: verified
/// Quickly center child item
/// @example
///  .containing-element {
///	  @include position-flex-center();
///  }
@mixin position-flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

//TODO: test
/// This mixin will be useful whenever you have content floating to the right or left and want to clear the space below the floating element to insert new content below.
%clearfix {
	*zoom: 1;
	&:before,
	&:after {
		content: ' ';
		display: table;
	}
	&:after {
		clear: both;
	}
}
