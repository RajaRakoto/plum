@charset "UTF-8";

//TODO: verified
/// Video-responsive mixin helps you create responsive containing elements with a fixed aspect ratio that you define. This is especially useful when you embed videos from youtube or similar sources.
/// @param {string} $ratio [16/9, 4/3] - the aspect ratio of the video
/// @example
///  /* HTML */
///
///  <div class="video-element">
///    <iframe src="https://www.youtube.com/watch?v=ByfFurjQDb0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
///  </div>
///
///  /* basic usage with 4/3 ratio (simply call the mixin without passing any argument, remember that the default $ratio value is set to 16/9.) */
///
///  .video-element {
///  	@include video-responsive('4/3');
///  }
@mixin video-responsive($ratio: null) {
	position: relative;
	&::before {
		content: '';
		display: block;
		@if not $ratio {
			padding-top: 56.25%;
		} @else if $ratio {
			@if type-of($ratio) == string {
				$width: null;
				$height: null;
				@if str-index($ratio, '/') {
					$fslash-index: str-index($ratio, '/');
					$width: __convertToNumber(str-slice($ratio, 1, $fslash-index - 1));
					$height: __convertToNumber(str-slice($ratio, $fslash-index + 1));
				} @else if str-index($ratio, ':') {
					$colon-index: str-index($ratio, ':');
					$width: __convertToNumber(str-slice($ratio, 1, $colon-index - 1));
					$height: __convertToNumber(str-slice($ratio, $colon-index + 1));
				}
				$calc: math.div($height, $width) * 100;
				padding-top: #{$calc * 1%};
			} @else if type-of($ratio) == number {
				padding-top: math.div(1, $ratio) * 100%;
			}
		}
	}
	& > * {
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}
}
